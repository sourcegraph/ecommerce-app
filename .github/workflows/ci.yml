name: CI
on: [pull_request]
jobs:
  lint-backend-types:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v4
        with:
          enable-cache: true
          cache-dependency-glob: "backend/uv.lock"

      - name: Set up Python
        run: uv python install

      - uses: extractions/setup-just@v3

      - name: Install backend deps
        run: |
          cd backend && uv sync --locked

      - name: Backend lint & types
        run: just check

  lint-frontend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with: 
          node-version: "20"
          cache: "npm"
          cache-dependency-path: "package-lock.json"

      - uses: extractions/setup-just@v3

      - name: Install frontend deps
        run: |
          cd frontend && npm ci

      - name: Frontend lint
        run: cd frontend && npm run lint

  backend-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v4
        with:
          enable-cache: true
          cache-dependency-glob: "backend/uv.lock"

      - name: Set up Python
        run: uv python install

      - uses: extractions/setup-just@v3

      - name: Install backend deps
        run: |
          cd backend && uv sync --locked

      - name: Backend tests
        run: just test-local

  build-frontend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with: 
          node-version: "20"
          cache: "npm"
          cache-dependency-path: "package-lock.json"

      - uses: extractions/setup-just@v3

      - name: Install frontend deps
        run: |
          cd frontend && npm ci

      - name: Build frontend
        run: just build

      - name: Upload frontend build
        uses: actions/upload-artifact@v4
        with:
          name: frontend-build
          path: frontend/dist

  e2e:
    needs: [lint-backend-types, lint-frontend, backend-tests, build-frontend]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v4
        with:
          enable-cache: true
          cache-dependency-glob: "backend/uv.lock"

      - name: Set up Python
        run: uv python install

      - uses: extractions/setup-just@v3

      - name: Install backend deps
        run: |
          cd backend && uv sync --locked

      - uses: actions/setup-node@v4
        with: 
          node-version: "20"
          cache: "npm"
          cache-dependency-path: "package-lock.json"

      - name: Install frontend deps
        run: |
          cd frontend && npm ci

      - name: Download frontend build
        uses: actions/download-artifact@v4
        with:
          name: frontend-build
          path: frontend/dist

      - name: Get installed Playwright version
        id: playwright-version
        run: echo "PLAYWRIGHT_VERSION=$(cd frontend && node -e "console.log(require('./package.json').devDependencies['@playwright/test'])")" >> $GITHUB_OUTPUT

      - name: Cache playwright binaries
        uses: actions/cache@v4
        id: playwright-cache
        with:
          path: |
            ~/.cache/ms-playwright
          key: ${{ runner.os }}-playwright-${{ steps.playwright-version.outputs.PLAYWRIGHT_VERSION }}

      - name: Install Playwright Browsers
        run: cd frontend && npx playwright install --with-deps
        if: steps.playwright-cache.outputs.cache-hit != 'true'

      - name: E2E tests
        run: just test-e2e
